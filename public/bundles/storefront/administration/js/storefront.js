(this.webpackJsonp=this.webpackJsonp||[]).push([["storefront"],{"/Ssc":function(e,t,n){var a=n("MHd+");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("2d7c6359",a,!0,{})},"/Zkd":function(e,t,n){var a=n("RvWa");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("c3aeaba4",a,!0,{})},"H/iK":function(e,t,n){var a=n("YmlE");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("81cd80f8",a,!0,{})},H6v6:function(e,t){e.exports='{% block sw_theme_manager_list %}\n    <sw-page class="sw-theme-list">\n\n        {% block sw_theme_manager_list_search_bar %}\n            <template slot="search-bar">\n                <sw-search-bar :placeholder="$tc(\'sw-theme-manager.general.placeholderSearchBar\')"\n                               :searchType="$tc(\'sw-theme-manager.general.mainMenuItemIndex\')"\n                               :entityService="themeRepository"\n                               @search="onSearch">\n                </sw-search-bar>\n            </template>\n        {% endblock %}\n\n        {% block sw_theme_manager_list_toolbar %}\n            <template slot="smart-bar-header">\n                <h2> {{ $tc(\'sw-theme-manager.general.mainMenuItemGeneral\') }}</h2>\n            </template>\n        {% endblock %}\n\n        {% block sw_theme_list_card_view %}\n            <sw-card-view slot="content">\n\n                {% block sw_themes_list_listing %}\n                    <div class="sw-theme-list__content">\n\n                        {% block sw_theme_list_listing_actions %}\n                            <div class="sw-theme-list__actions">\n\n                                {% block sw_theme_list_listing_title %}\n                                    <h3>{{ $tc(\'sw-theme-manager.general.mainMenuHeader\') }}</h3>\n                                {% endblock %}\n\n                                {% block sw_theme_list_listing_actions_sorting %}\n                                    <div class="sw-theme-list__actions-sorting">\n                                        <sw-field type="select"\n                                                  name="sortType"\n                                                  :label="$tc(\'sw-theme-manager.sorting.labelSort\')"\n                                                  :value="sortingConCat"\n                                                  @change="onSortingChanged"\n                                                  aside>\n\n                                            {% block sw_theme_list_listing_actions_sorting_options %}\n                                            <option v-for="sortOption in sortOptions"\n                                                    :value="sortOption.value">\n                                                {{ sortOption.name }}\n                                            </option>\n                                            {% endblock %}\n                                        </sw-field>\n                                    </div>\n                                {% endblock %}\n\n                                {% block sw_theme_list_listing_actions_mode %}\n                                    <div class="sw-theme-list__actions-mode" @click="onListModeChange">\n                                        <sw-icon name="default-view-normal" size="16" v-if="listMode === \'grid\'"></sw-icon>\n                                        <sw-icon name="default-view-grid" size="16" v-if="listMode === \'list\'"></sw-icon>\n                                    </div>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n\n                        {% block sw_theme_list_listing_list %}\n                            <div class="sw-theme-list__list">\n\n                                {% block sw_theme_list_listing_list_card %}\n                                    <sw-card class="sw-theme-list__list-card" v-if="listMode === \'list\'">\n                                        <template slot="grid">\n\n                                            {% block sw_theme_list_listing_list_data_grid %}\n                                                <sw-data-grid\n                                                    class="sw-theme-list__list-data-grid"\n                                                    identifier="sw-theme-list"\n                                                    :isLoading="isLoading"\n                                                    :dataSource="themes"\n                                                    :columns="columnConfig"\n                                                    :skeletonItemAmount="limit"\n                                                    :sortBy="sortBy"\n                                                    :sortDirection="sortDirection"\n                                                    :allowInlineEdit="false"\n                                                    :allowColumnEdit="false"\n                                                    :showSettings="false"\n                                                    :showSelection="false"\n                                                    @column-sort="onSortColumn">\n\n                                                    {% block sw_theme_list_listing_list_data_grid_column_name %}\n                                                        <template #column-name="{ item }">\n                                                            <sw-icon\n                                                                name="default-lock-closed"\n                                                                class="sw-theme-list__icon-lock"\n                                                                v-if="!item.parentThemeId"\n                                                                v-tooltip="lockToolTip"\n                                                                size="14">\n                                                            </sw-icon>\n                                                            <router-link :to="{ name: \'sw.theme.manager.detail\', params: { id: item.id } }">\n                                                                {{ item.name }}\n                                                            </router-link>\n                                                        </template>\n                                                    {% endblock %}\n\n                                                    {% block sw_theme_list_listing_list_data_grid_column_assignment %}\n                                                        <template #column-assignment="{ item }">\n                                                            {{ item.salesChannels.length }}\n                                                        </template>\n                                                    {% endblock %}\n\n                                                    {% block sw_theme_list_listing_list_data_grid_column_created %}\n                                                        <template #column-createdAt="{ item }">\n                                                            {{ item.createdAt | date({ hour: \'2-digit\', minute: \'2-digit\' }) }}\n                                                        </template>\n                                                    {% endblock %}\n\n                                                    {% block sw_theme_list_listing_list_data_grid_actions %}\n                                                        <template #actions="{ item }">\n                                                            {% block sw_theme_list_listing_list_data_grid_actions_edit %}\n                                                                <sw-context-menu-item :routerLink="{ name: \'sw.theme.manager.detail\', params: { id: item.id } }">\n                                                                    {{ $tc(\'sw-theme-manager.themeListItem.edit\') }}\n                                                                </sw-context-menu-item>\n                                                            {% endblock %}\n\n                                                            {% block sw_theme_list_listing_list_data_grid_actions_rename %}\n                                                                <sw-context-menu-item @click="onRenameTheme(item)">\n                                                                    {{ $tc(\'sw-theme-manager.themeListItem.rename\') }}\n                                                                </sw-context-menu-item>\n                                                            {% endblock %}\n\n                                                            {% block sw_theme_list_listing_list_data_grid_actions_delete %}\n                                                                <sw-context-menu-item\n                                                                    variant="danger"\n                                                                    :disabled="item.salesChannels.length > 0"\n                                                                    v-tooltip="deleteDisabledToolTip(item)"\n                                                                    @click="onDeleteTheme(item)"\n                                                                    v-if="item.parentThemeId">\n\n                                                                    {{ $tc(\'sw-theme-manager.themeListItem.delete\') }}\n                                                                </sw-context-menu-item>\n                                                            {% endblock %}\n\n                                                            {% block sw_theme_list_listing_list_data_grid_actions_create %}\n                                                                <sw-context-menu-item @click="onDuplicateTheme(item)" v-if="!item.parentThemeId">\n                                                                    {{ $tc(\'sw-theme-manager.actions.duplicate\') }}\n                                                                </sw-context-menu-item>\n                                                            {% endblock %}\n                                                        </template>\n                                                    {% endblock %}\n\n                                                    {% block sw_theme_list_listing_list_data_grid_pagination %}\n                                                        <template #pagination>\n                                                            <sw-pagination\n                                                                :page="page"\n                                                                :limit="limit"\n                                                                :total="total"\n                                                                :steps="[5, 10, 25, 50]"\n                                                                @page-change="onPageChange">\n                                                            </sw-pagination>\n                                                        </template>\n                                                    {% endblock %}\n                                                </sw-data-grid>\n                                            {% endblock %}\n                                        </template>\n                                    </sw-card>\n                                {% endblock %}\n\n                                {% block sw_theme_list_listing_list_grid %}\n                                    <div class="sw-theme-list__list-grid" v-if="listMode === \'grid\'">\n\n                                        {% block sw_theme_list_listing_list_grid_content %}\n                                            <div class="sw-theme-list__list-grid-content">\n                                                {% block sw_theme_list_listing_list_item %}\n                                                    <sw-theme-list-item\n                                                        v-for="theme in themes"\n                                                        :theme="theme"\n                                                        :key="theme.id"\n                                                        @preview-image-change="onPreviewChange"\n                                                        @item-click="onListItemClick">\n\n                                                        <sw-context-button slot="contextMenu"\n                                                                           class="sw-theme-list-item__options">\n\n                                                            {% block sw_theme_list_listing_list_item_option_add_preview %}\n                                                                <sw-context-menu-item\n                                                                    class="sw-theme-list-item__option-preview"\n                                                                    @click="onPreviewChange(theme)">\n\n                                                                    {{ $tc(\'sw-theme-manager.themeListItem.addPreviewImage\') }}\n                                                                </sw-context-menu-item>\n                                                            {% endblock %}\n\n                                                            {% block sw_theme_list_listing_list_item_option_remove_preview %}\n                                                                <sw-context-menu-item\n                                                                    class="sw-theme-list-item__option-preview"\n                                                                    v-if="theme.previewMediaId"\n                                                                    variant="danger"\n                                                                    @click="onPreviewImageRemove(theme)">\n\n                                                                    {{ $tc(\'sw-theme-manager.themeListItem.removePreviewImage\') }}\n                                                                </sw-context-menu-item>\n                                                            {% endblock %}\n\n                                                            {% block sw_theme_list_listing_list_item_option_rename %}\n                                                                <sw-context-menu-item @click="onRenameTheme(theme)">\n                                                                    {{ $tc(\'sw-theme-manager.themeListItem.rename\') }}\n                                                                </sw-context-menu-item>\n                                                            {% endblock %}\n\n                                                            {% block sw_theme_list_listing_list_item_option_create %}\n                                                                <sw-context-menu-item @click="onDuplicateTheme(theme)" v-if="!theme.parentThemeId">\n                                                                    {{ $tc(\'sw-theme-manager.actions.duplicate\') }}\n                                                                </sw-context-menu-item>\n                                                            {% endblock %}\n\n                                                            {% block sw_theme_list_listing_list_item_option_delete %}\n                                                                <sw-context-menu-item\n                                                                    v-if="theme.parentThemeId"\n                                                                    class="sw-theme-list-item__option-delete"\n                                                                    variant="danger"\n                                                                    :disabled="theme.salesChannels.length > 0"\n                                                                    v-tooltip="deleteDisabledToolTip(theme)"\n                                                                    @click="onDeleteTheme(theme)">\n\n                                                                    {{ $tc(\'sw-theme-manager.themeListItem.delete\') }}\n                                                                </sw-context-menu-item>\n                                                            {% endblock %}\n                                                        </sw-context-button>\n                                                    </sw-theme-list-item>\n                                                {% endblock %}\n                                            </div>\n                                        {% endblock %}\n\n                                        {% block sw_theme_list_listing_pagination %}\n                                        <sw-pagination class="sw-theme-list__list-pagination"\n                                                       v-if="!isLoading"\n                                                       :page="page"\n                                                       :limit="limit"\n                                                       :total="total"\n                                                       :steps="[9]"\n                                                       @page-change="onPageChange">\n                                        </sw-pagination>\n                                        {% endblock %}\n                                    </div>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </div>\n                {% endblock %}\n\n                {% block sw_theme_list_listing_list_loader %}\n                    <sw-loader v-if="isLoading && listMode === \'grid\'"></sw-loader>\n                {% endblock %}\n\n                {% block sw_theme_list_media_modal %}\n                    <sw-media-modal\n                        variant="regular"\n                        v-if="showMediaModal"\n                        :caption="$tc(\'sw-theme-manager.general.captionMediaUpload\')"\n                        entityContext="theme"\n                        :allowMultiSelect="false"\n                        @media-modal-selection-change="onPreviewImageChange"\n                        @modal-close="onModalClose">\n                    </sw-media-modal>\n                {% endblock %}\n\n                {% block sw_theme_list_delete_modal %}\n                    <sw-modal v-if="showDeleteModal"\n                              @modal-close="onCloseDeleteModal"\n                              :title="$tc(\'sw-theme-manager.modal.modalTitleDelete\')"\n                              variant="small">\n    \n                        {% block sw_theme_list_delete_modal_info %}\n                            <div class="sw_theme_manager__confirm-delete-text">\n                                {{ $tc(\'sw-theme-manager.modal.textDeleteInfo\', 0,\n                                { themeName: modalTheme.name }) }}\n                            </div>\n                        {% endblock %}\n    \n                        {% block sw_theme_list_delete_modal_footer %}\n                            <template slot="modal-footer">\n                                {% block sw_theme_list_delete_modal_cancel %}\n                                    <sw-button @click="onCloseDeleteModal"\n                                               size="small">\n                                        {{ $tc(\'sw-theme-manager.modal.buttonCancel\') }}\n                                    </sw-button>\n                                {% endblock %}\n        \n                                {% block sw_theme_list_delete_modal_confirm %}\n                                    <sw-button @click="onConfirmThemeDelete"\n                                               variant="danger"\n                                               size="small">\n                                        {{ $tc(\'sw-theme-manager.modal.buttonDelete\') }}\n                                    </sw-button>\n                                {% endblock %}\n                            </template>\n                        {% endblock %}\n                    </sw-modal>\n                {% endblock %}\n\n                {% block sw_theme_list_duplicate_modal %}\n                    <sw-modal v-if="showDuplicateModal"\n                              class="sw_theme_manager__duplicate-modal"\n                              @modal-close="onCloseDuplicateModal"\n                              :title="$tc(\'sw-theme-manager.modal.modalTitleDuplicate\')"\n                              variant="small">\n\n                        {% block sw_theme_list_duplicate__modal_name_input %}\n                            <div class="sw_theme_manager__duplicate-info">\n                                {{ $tc(\'sw-theme-manager.modal.textDuplicateInfo\') }}\n                            </div>\n\n                            <sw-field v-model="newThemeName"\n                                      :label="$tc(\'sw-theme-manager.modal.labelDuplicateThemeName\')"\n                                      :placeholder="$tc(\'sw-theme-manager.modal.placeholderDuplicateThemeName\')"\n                                      tpye="text">\n                            </sw-field>\n                        {% endblock %}\n\n                        {% block sw_theme_list_duplicate_modal_footer %}\n                            <template slot="modal-footer">\n                                {% block sw_theme_list_duplicate_modal_cancel %}\n                                    <sw-button @click="onCloseDuplicateModal"\n                                               size="small">\n                                        {{ $tc(\'sw-theme-manager.modal.buttonCancel\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                                {% block sw_theme_list_duplicate_modal_confirm %}\n                                    <sw-button @click="onConfirmThemeDuplicate"\n                                               variant="primary"\n                                               :disabled="newThemeName.length < 3"\n                                               size="small">\n                                        {{ $tc(\'sw-theme-manager.modal.buttonDuplicateTheme\') }}\n                                    </sw-button>\n                                {% endblock %}\n                            </template>\n                        {% endblock %}\n                    </sw-modal>\n                {% endblock %}\n                \n                {% block sw_theme_list_rename_modal %}\n                    <sw-modal v-if="showRenameModal"\n                              class="sw_theme_manager__rename-modal"\n                              @modal-close="onCloseRenameModal"\n                              :title="$tc(\'sw-theme-manager.modal.modalTitleRename\')"\n                              variant="small">\n\n                        {% block sw_theme_list_rename__modal_name_input %}\n                            <div class="sw_theme_manager__rename-info">\n                                {{ $tc(\'sw-theme-manager.modal.textRenameInfo\') }}\n                            </div>\n\n                            <sw-field v-model="newThemeName"\n                                      :label="$tc(\'sw-theme-manager.modal.labelRenameThemeName\')"\n                                      :placeholder="$tc(\'sw-theme-manager.modal.placeholderRenameThemeName\')"\n                                      tpye="text">\n                            </sw-field>\n                        {% endblock %}\n\n                        {% block sw_theme_list_rename_modal_footer %}\n                            <template slot="modal-footer">\n                                {% block sw_theme_list_rename_modal_cancel %}\n                                    <sw-button @click="onCloseRenameModal"\n                                               size="small">\n                                        {{ $tc(\'sw-theme-manager.modal.buttonCancel\') }}\n                                    </sw-button>\n                                {% endblock %}\n\n                                {% block sw_theme_list_rename_modal_confirm %}\n                                    <sw-button @click="onConfirmThemeRename"\n                                               variant="primary"\n                                               :disabled="newThemeName.length < 3"\n                                               size="small">\n                                        {{ $tc(\'sw-theme-manager.modal.buttonRenameTheme\') }}\n                                    </sw-button>\n                                {% endblock %}\n                            </template>\n                        {% endblock %}\n                    </sw-modal>\n                {% endblock %}\n            </sw-card-view>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n'},HyUs:function(e,t){e.exports='{% block sw_sales_channel_detail_theme %}\n    <sw-card :title="$tc(\'sales-channel-theme.title\')" :isLoading="isLoading">\n        <div class="sw-sales-channel-detail-theme">\n\n            {% block sw_sales_channel_detail_theme_preview %}\n                <div class="sw-sales-channel-detail-theme__preview">\n                    {% block sw_sales_channel_detail_theme_preview_item %}\n                        <div @click="openThemeModal">\n                            <sw-theme-list-item :theme="theme" :active="!!theme"></sw-theme-list-item>\n                        </div>\n                    {% endblock %}\n\n                    {% block sw_sales_channel_detail_theme_modal %}\n                        <sw-theme-modal\n                            v-if="showThemeSelectionModal"\n                            @modal-theme-select="onChangeTheme"\n                            @modal-close="closeThemeModal">\n                        </sw-theme-modal>\n                    {% endblock %}\n                </div>\n            {% endblock %}\n\n            {% block sw_sales_channel_detail_theme_info %}\n                <div class="sw-sales-channel-detail-theme__info">\n\n                    {% block sw_sales_channel_detail_theme_info_content %}\n                        <div class="sw-sales-channel-detail-theme__info-content">\n\n                            {% block sw_sales_channel_detail_theme_info_name %}\n                                <div class="sw-sales-channel-detail-theme__info-name" :class="{ \'is--empty\': !theme }">\n                                    {{ theme ? theme.name : $tc(\'sales-channel-theme.defaultTitle\') }}\n                                </div>\n                            {% endblock %}\n\n                            {% block sw_sales_channel_detail_theme_info_author %}\n                                <div v-if="theme" class="sw-sales-channel-detail-theme__info-author">\n                                    {{ theme.author }}\n                                </div>\n                            {% endblock %}\n\n                            {% block sw_sales_channel_detail_theme_info_description %}\n                                <div v-if="theme && theme.description" class="sw-sales-channel-detail-theme__info-description">\n                                    <p class="sw-sales-channel-detail-theme__info-description-title">\n                                        {{ $tc(\'sw-theme-manager.detail.description\') }}:\n                                    </p>\n                                    <p>{{ theme.description |truncate(140) }}</p>\n                                </div>\n                            {% endblock %}\n                        </div>\n                    {% endblock %}\n\n                    {% block sw_sales_channel_detail_theme_info_actions %}\n                        <div class="sw-sales-channel-detail-theme__info-actions">\n\n                            {% block sw_sales_channel_detail_theme_info_actions_theme %}\n                                <sw-button size="small" @click="openThemeModal">\n                                    {{ theme ? $tc(\'sales-channel-theme.changeTheme\') : $tc(\'sales-channel-theme.changeThemeEmpty\') }}\n                                </sw-button>\n                            {% endblock %}\n\n                            {% block sw_sales_channel_detail_theme_info_actions_manager %}\n                                <sw-button size="small" @click="openInThemeManager">\n                                    {{ theme ? $tc(\'sales-channel-theme.editContent\'): $tc(\'sales-channel-theme.createTheme\') }}\n                                </sw-button>\n                            {% endblock %}\n                        </div>\n                    {% endblock %}\n                </div>\n            {% endblock %}\n\n            {% block sw_sales_channel_detail_theme_change_modal %}\n                <sw-modal v-if="showChangeModal"\n                          @modal-close="onCloseChangeModal"\n                          :title="$tc(\'sales-channel-theme.modal.modalTitleChange\')"\n                          variant="small">\n\n                    {% block sw_sales_channel_detail_theme_change_modal_info %}\n                        <p class="sw-sales-channel-detail-theme__confirm-change-text">\n                            {{ $tc(\'sales-channel-theme.modal.textChangeTheme\') }}\n                        </p>\n                    {% endblock %}\n\n                    {% block sw_sales_channel_detail_theme_change_modal_footer %}\n                        <template slot="modal-footer">\n                            {% block sw_sales_channel_detail_theme_change_modal_cancel %}\n                                <sw-button @click="onCloseChangeModal"\n                                           size="small">\n                                    {{ $tc(\'sales-channel-theme.modal.buttonCancel\') }}\n                                </sw-button>\n                            {% endblock %}\n\n                            {% block sw_sales_channel_detail_theme_change_modal_confirm %}\n                                <sw-button @click="onConfirmChange"\n                                           variant="primary"\n                                           size="small">\n                                    {{ $tc(\'sales-channel-theme.modal.buttonChange\') }}\n                                </sw-button>\n                            {% endblock %}\n                        </template>\n                    {% endblock %}\n                </sw-modal>\n            {% endblock %}\n        </div>\n    </sw-card>\n{% endblock %}\n'},KzEh:function(e,t,n){},L9KI:function(e,t,n){"use strict";n.r(t);n("Ujji");var a=n("x2yi"),s=n.n(a);n("eP6W");const{Component:i,Application:l,Mixin:o,StateDeprecated:m}=Shopware,h=Shopware.Data.Criteria,{getObjectDiff:d,cloneDeep:c}=Shopware.Utils.object;i.register("sw-theme-manager-detail",{template:s.a,mixins:[o.getByName("theme")],data:()=>({theme:null,parentTheme:null,defaultMediaFolderId:null,themeFields:{},themeConfig:{},showResetModal:!1,showSaveModal:!1,baseThemeConfig:{},isLoading:!1,isSaveSuccessful:!1,mappedFields:{color:"colorpicker",fontFamily:"text"}}),computed:{mediaRepository(){return this.repositoryFactory.create("media")},defaultFolderRepository(){return this.repositoryFactory.create("media_default_folder")},previewMedia(){return this.theme&&this.theme.previewMedia&&this.theme.previewMedia.id&&this.theme.previewMedia.url?{"background-image":`url('${this.theme.previewMedia.url}')`,"background-size":"cover"}:{"background-image":this.defaultThemeAsset}},defaultThemeAsset:()=>`url('${Shopware.Context.api.assetsPath}/administration/static/img/theme/default_theme_preview.jpg')`,deleteDisabledToolTip(){return{showDelay:300,message:this.$tc("sw-theme-manager.actions.deleteDisablesToolTip"),disabled:0===this.theme.salesChannels.length}},mediaStore:()=>m.getStore("media"),themeId(){return this.$route.params.id}},created(){this.createdComponent()},watch:{themeId(){this.getTheme()}},methods:{createdComponent(){this.getTheme(),this.setPageContext()},getTheme(){if(!this.themeId)return;this.isLoading=!0;const e=new h;e.addAssociation("previewMedia"),e.addAssociation("salesChannels"),this.themeRepository.get(this.themeId,Shopware.Context.api,e).then(e=>{this.theme=e,this.getThemeConfig(),this.theme.parentThemeId&&this.getParentTheme(),this.isLoading=!1})},getThemeConfig(){this.isLoading=!0,this.theme&&this.themeId&&(this.themeService.getFields(this.themeId).then(e=>{this.themeFields=e}),this.themeService.getConfiguration(this.themeId).then(e=>{this.themeConfig=e.fields,this.baseThemeConfig=c(e.fields),this.isLoading=!1}))},setPageContext(){this.getDefaultFolderId().then(e=>{this.defaultMediaFolderId=e})},getParentTheme(){this.themeRepository.get(this.theme.parentThemeId,Shopware.Context.api).then(e=>{this.parentTheme=e})},openMediaSidebar(){this.$refs.mediaSidebarItem.openContent()},onDropMedia(e,t){this.setMediaItem(e,t)},setMediaItem(e,t){t.value=e.id},successfulUpload(e,t){this.mediaStore.getByIdAsync(e.targetId).then(e=>(this.setMediaItem(e,t),!0))},removeMediaItem(e){e.value=null},onReset(){null!==this.theme.configValues&&(this.showResetModal=!0)},onCloseResetModal(){this.showResetModal=!1},onConfirmThemeReset(){this.themeService.resetTheme(this.themeId).then(()=>{this.getTheme()}),this.showResetModal=!1},onSave(){this.theme.salesChannels.length>0?this.showSaveModal=!0:this.onSaveTheme()},onCloseSaveModal(){this.showSaveModal=!1},onConfirmThemeSave(){this.onSaveTheme(),this.showSaveModal=!1},onSaveTheme(){this.isSaveSuccessful=!1,this.isLoading=!0;const e=d(this.baseThemeConfig,this.themeConfig);return this.themeService.updateTheme(this.themeId,{config:e}).then(()=>{this.getTheme()}).catch(()=>{this.isLoading=!1})},saveFinish(){this.isSaveSuccessful=!1},onSearch(e=null){!e.length||e.length<=0?this.term=null:this.term=e},mapSwFieldTypes(e){return this.mappedFields[e]?this.mappedFields[e]:null},getDefaultFolderId(){const e=new h(1,1);return e.addAssociation("folder"),e.addFilter(h.equals("entity",this.themeRepository.schema.entity)),this.defaultFolderRepository.search(e,Shopware.Context.api).then(e=>{const t=e.first();return t.folder.id?t.folder.id:null})},getBind(e){const t=Object.assign({},e);return delete t.type,Object.assign(t,t.custom),delete t.custom,{type:e.type,config:t}}}});var r=n("H6v6"),_=n.n(r);n("/Ssc");const{Component:w,Mixin:g}=Shopware,p=Shopware.Data.Criteria;w.register("sw-theme-manager-list",{template:_.a,mixins:[g.getByName("notification"),g.getByName("listing"),g.getByName("theme")],data(){return{themes:[],isLoading:!1,total:0,disableRouteParams:!0,salesChannelId:this.$route.params.id,listMode:"grid",sortBy:"createdAt",sortDirection:"DESC",limit:9,term:null}},computed:{languageRepository(){return this.repositoryFactory.create("language")},columnConfig(){return this.getColumnConfig()},sortOptions(){return[{value:"createdAt:DESC",name:this.$tc("sw-theme-manager.sorting.labelSortByCreatedDsc")},{value:"createdAt:ASC",name:this.$tc("sw-theme-manager.sorting.labelSortByCreatedAsc")},{value:"updatedAt:DESC",name:this.$tc("sw-theme-manager.sorting.labelSortByUpdatedDsc")},{value:"updatedAt:ASC",name:this.$tc("sw-theme-manager.sorting.labelSortByUpdatedAsc")}]},sortingConCat(){return`${this.sortBy}:${this.sortDirection}`},lockToolTip(){return{showDelay:100,message:this.$tc("sw-theme-manager.general.lockedToolTip")}}},methods:{onRefresh(){this.getList()},getList(){this.isLoading=!0;const e=new p(this.page,this.limit);return e.addAssociation("previewMedia"),e.addAssociation("salesChannels"),e.addSorting(p.sort(this.sortBy,this.sortDirection)),e.addFilter(p.equals("active",!0)),null!==this.term&&e.setTerm(this.term),this.themeRepository.search(e,Shopware.Context.api).then(e=>(this.total=e.total,this.themes=e,this.isLoading=!1,this.pages)).catch(()=>{this.isLoading=!1})},resetList(){this.page=1,this.themes=[],this.updateRoute({page:this.page,limit:this.limit,term:this.term,sortBy:this.sortBy,sortDirection:this.sortDirection}),this.getList()},onChangeLanguage(e){Shopware.Context.api.languageId=e,this.resetList()},onListItemClick(e){this.$router.push({name:"sw.theme.manager.detail",params:{id:e.id}})},onSortingChanged(e){[this.sortBy,this.sortDirection]=e.split(":"),this.resetList()},onSearch(e=null){this.term=e.length>0?e:null,this.resetList()},onPageChange({page:e,limit:t}){this.page=e,this.limit=t,this.getList(),this.updateRoute({page:this.page,limit:this.limit})},onListModeChange(){this.listMode="grid"===this.listMode?"list":"grid",this.limit="grid"===this.listMode?9:10,this.resetList()},onPreviewChange(e){this.showMediaModal=!0,this.currentTheme=e},onPreviewImageRemove(e){e.previewMediaId=null,e.previewMedia=null,this.saveTheme(e)},onModalClose(){this.showMediaModal=!1,this.currentTheme=null},onPreviewImageChange([e]){this.currentTheme.previewMediaId=e.id,this.saveTheme(this.currentTheme),this.currentTheme.previewMedia=e},saveTheme(e){return this.isLoading=!0,this.themeRepository.save(e,Shopware.Context.api).then(()=>{this.isLoading=!1}).catch(()=>{this.isLoading=!1})},getColumnConfig(){return[{property:"name",label:this.$tc("sw-theme-manager.list.gridHeaderName"),primary:!0},{property:"salesChannels.length",label:this.$tc("sw-theme-manager.list.gridHeaderAssignment"),sortable:!1},{property:"createdAt",label:this.$tc("sw-theme-manager.list.gridHeaderCreated")}]},deleteDisabledToolTip(e){return{showDelay:300,message:this.$tc("sw-theme-manager.actions.deleteDisablesToolTip"),disabled:0===e.salesChannels.length}}}});var b=n("sTDI"),u=n.n(b);n("cu/B");const{Component:v,Application:f}=Shopware;v.register("sw-theme-list-item",{template:u.a,props:{theme:{type:Object,required:!1,default:null},active:{type:Boolean,required:!1,default:!1}},computed:{previewMedia(){return this.theme.previewMedia&&this.theme.previewMedia.id&&this.theme.previewMedia.url?{"background-image":`url('${this.theme.previewMedia.url}')`,"background-size":"cover"}:{"background-image":this.defaultThemeAsset}},defaultThemeAsset:()=>`url('${Shopware.Context.api.assetsPath}/administration/static/img/theme/default_theme_preview.jpg')`,lockToolTip(){return{showDelay:100,message:this.$tc("sw-theme-manager.general.lockedToolTip")}},componentClasses(){return{"is--active":this.isActive()}}},methods:{isActive(){return this.theme&&this.theme.salesChannels&&this.theme.salesChannels.length>0||this.active},onChangePreviewImage(e){this.$emit("preview-image-change",e)},onThemeClick(){this.$emit("item-click",this.theme)},onRemovePreviewImage(e){e.previewMediaId=null,e.save(),e.previewMedia=null},onDelete(e){this.$emit("theme-delete",e)}}});var k=n("MS43"),T=n.n(k);n("H/iK");const{Component:C,Mixin:x}=Shopware,M=Shopware.Data.Criteria;C.register("sw-theme-modal",{template:T.a,inject:["repositoryFactory"],mixins:[x.getByName("listing")],data:()=>({selected:null,isLoading:!1,sortBy:"createdAt",sortDirection:"DESC",term:null,total:null,themes:[]}),computed:{themeRepository(){return this.repositoryFactory.create("theme")}},methods:{getList(){this.isLoading=!0;const e=new M(this.page,this.limit);return e.addAssociation("previewMedia"),e.addAssociation("salesChannels"),e.addFilter(M.equals("active",!0)),e.addSorting(M.sort(this.sortBy,this.sortDirection)),null!==this.term&&e.setTerm(this.term),this.themeRepository.search(e,Shopware.Context.api).then(e=>(this.total=e.total,this.themes=e,this.isLoading=!1,this.themes)).catch(()=>{this.isLoading=!1})},selectLayout(){this.$emit("modal-theme-select",this.selected),this.closeModal()},selectItem(e){this.selected=e},onSearch(e){this.term=e.length>0?e.length:null,this.page=1,this.getList()},onSelection(e){this.selected=e},closeModal(){this.$emit("modal-close"),this.selected=null,this.term=null}}});const{Module:$}=Shopware;$.register("sw-theme-manager",{type:"core",title:"sw-theme-manager.general.mainMenuItemGeneral",description:"sw-theme-manager.general.descriptionTextModule",version:"1.0.0",targetVersion:"1.0.0",color:"#ff68b4",icon:"default-symbol-content",favicon:"icon-module-content.png",entity:"theme",routes:{index:{component:"sw-theme-manager-list",path:"index"},create:{component:"sw-theme-manager-create",path:"create",meta:{parentPath:"sw.theme.manager.index"}},detail:{component:"sw-theme-manager-detail",path:"detail/:id",meta:{parentPath:"sw.theme.manager.index"}}},navigation:[{id:"sw-theme-manager",label:"sw-theme-manager.general.mainMenuItemGeneral",color:"#ff68b4",icon:"default-object-image",path:"sw.theme.manager.index",position:80,parent:"sw-content"}],routeMiddleware(e,t){"sw.sales.channel.detail"===t.name&&t.children.push({component:"sw-sales-channel-detail-theme",name:"sw.sales.channel.detail.theme",isChildren:!0,path:"/sw/sales/channel/detail/:id/theme"}),e(t)}});var y=n("WWD4"),S=n.n(y);const{Component:I}=Shopware;I.override("sw-sales-channel-detail",{template:S.a,methods:{getLoadSalesChannelCriteria(){const e=this.$super("getLoadSalesChannelCriteria");return e.addAssociation("themes"),e}}});var D=n("HyUs"),R=n.n(D);n("/Zkd");const{Component:L,Mixin:A}=Shopware,B=Shopware.Data.Criteria;L.register("sw-sales-channel-detail-theme",{template:R.a,mixins:[A.getByName("notification"),A.getByName("placeholder")],inject:["repositoryFactory","themeService"],props:{salesChannel:{required:!0}},data:()=>({theme:null,showThemeSelectionModal:!1,showChangeModal:!1,newThemeId:null,isLoading:!1}),computed:{themeRepository(){return this.repositoryFactory.create("theme")}},watch:{"salesChannel.extensions.themes":{deep:!0,handler(){!this.salesChannel||!this.salesChannel.extensions||this.salesChannel.extensions.themes.length<1||(this.theme=this.salesChannel.extensions.themes[0],this.getTheme(this.theme.id))}}},created(){this.createdComponent()},methods:{createdComponent(){!this.salesChannel||!this.salesChannel.extensions||this.salesChannel.extensions.themes.length<1||(this.theme=this.salesChannel.extensions.themes[0],this.getTheme(this.theme.id))},getTheme(e){if(null===e)return;const t=new B;t.addAssociation("previewMedia"),this.themeRepository.get(e,Shopware.Context.api,t).then(e=>{this.theme=e})},openThemeModal(){this.showThemeSelectionModal=!0},closeThemeModal(){this.showThemeSelectionModal=!1},openInThemeManager(){this.theme?this.$router.push({name:"sw.theme.manager.detail",params:{id:this.theme.id}}):this.$router.push({name:"sw.theme.manager.index"})},onChangeTheme(e){this.showThemeSelectionModal=!1,this.newThemeId=e,this.showChangeModal=!0},onCloseChangeModal(){this.showChangeModal=!1,this.newThemeId=null},onConfirmChange(){this.newThemeId&&this.onThemeSelect(this.newThemeId),this.showChangeModal=!1,this.newThemeId=null},onThemeSelect(e){this.isLoading=!0,this.getTheme(e),this.themeService.assignTheme(e,this.salesChannel.id).then(()=>{this.isLoading=!1}).catch(()=>{this.createNotificationError({title:this.$tc("sw-theme-manager.general.titleError"),message:this.$tc("sw-theme-manager.general.messageSaveError")}),this.isLoading=!1})}}});const F=Shopware.Classes.ApiService;var N=class extends F{constructor(e,t,n="theme"){super(e,t,n),this.name="themeService"}assignTheme(e,t,n={},a={}){const s=`/_action/${this.getApiBasePath()}/${e}/assign/${t}`;return this.httpClient.post(s,{},{params:{...n},headers:this.getBasicHeaders(a)}).then(e=>F.handleResponse(e))}updateTheme(e,t,n={},a={}){const s=`/_action/${this.getApiBasePath()}/${e}`;return this.httpClient.patch(s,t,{params:{...n},headers:this.getBasicHeaders(a)}).then(e=>F.handleResponse(e))}resetTheme(e,t={},n={}){const a=`/_action/${this.getApiBasePath()}/${e}/reset`;return this.httpClient.patch(a,{},{params:{...t},headers:this.getBasicHeaders(n)}).then(e=>F.handleResponse(e))}getConfiguration(e){const t=`/_action/${this.getApiBasePath()}/${e}/configuration`;return this.httpClient.get(t,{headers:this.getBasicHeaders({})}).then(e=>F.handleResponse(e))}getFields(e){const t=`/_action/${this.getApiBasePath()}/${e}/fields`;return this.httpClient.get(t,{headers:this.getBasicHeaders({})}).then(e=>F.handleResponse(e))}};const{Application:P}=Shopware;P.addServiceProviderDecorator("themeService",e=>{const t=P.getContainer("init");return new N(t.httpClient,e.loginService)})},"MHd+":function(e,t,n){},MS43:function(e,t){e.exports='{% block sw_theme_modal %}\n    <sw-modal class="sw-theme-modal" @modal-close="closeModal" :title="$tc(\'sw-theme-manager.themeModal.modalTitle\')">\n\n        {% block sw_theme_modal_header %}\n            <div class="sw-theme-modal__header">\n\n                {% block sw_theme_modal_header_title %}\n                    <div class="sw-theme-modal__header-title">\n                        {{ $tc(\'sw-theme-manager.themeModal.headline\') }}\n                    </div>\n                {% endblock %}\n\n                {% block sw_theme_modal_header_search %}\n                    <sw-simple-search-field class="sw-theme-modal__header-search"\n                        :placeholder="$tc(\'sw-theme-manager.general.placeholderSearchBar\')"\n                        @search-term-change="onSearch">\n                    </sw-simple-search-field>\n                {% endblock %}\n\n            </div>\n        {% endblock %}\n\n        {% block sw_theme_modal_content %}\n            <div class="sw-theme-modal__content">\n\n                {% block sw_theme_modal_loader %}\n                    <sw-loader v-if="isLoading"></sw-loader>\n                {% endblock %}\n\n                {% block sw_theme_modal_content %}\n                    <sw-container v-else columns="repeat(auto-fill, minmax(250px, 1fr))" gap="24px">\n                        {% block sw_theme_modal_content_listing %}\n                            <div v-for="theme in themes" class="sw-theme-modal__content-item" :class="{ \'is--selected\': theme.id === selected }">\n                                {% block sw_theme_modal_content_listing_item %}\n\n                                    {% block sw_theme_modal_content_listing_item_checkbox %}\n                                        <sw-checkbox-field @change="onSelection(theme.id)" :value="theme.id === selected" type="checkbox"></sw-checkbox-field>\n                                    {% endblock %}\n\n                                    {% block sw_theme_modal_content_listing_item_inner %}\n                                        <sw-theme-list-item\n                                            :theme="theme"\n                                            :key="theme.id"\n                                            @item-click="selectItem(theme.id)">\n                                        </sw-theme-list-item>\n                                    {% endblock %}\n\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </sw-container>\n                {% endblock %}\n            </div>\n        {% endblock %}\n\n        {% block sw_theme_modal_footer %}\n            <template slot="modal-footer">\n                <sw-button @click="closeModal">\n                    {{ $tc(\'sw-theme-manager.themeModal.actionCancel\') }}\n                </sw-button>\n                <sw-button @click="selectLayout" variant="primary">\n                    {{ $tc(\'sw-theme-manager.themeModal.actionConfirm\') }}\n                </sw-button>\n            </template>\n        {% endblock %}\n\n    </sw-modal>\n{% endblock %}\n'},RvWa:function(e,t,n){},Ujji:function(e,t){const{Mixin:n}=Shopware;n.register("theme",{inject:["repositoryFactory","themeService"],data:()=>({showDeleteModal:!1,showMediaModal:!1,showRenameModal:!1,showDuplicateModal:!1,newThemeName:"",modalTheme:null}),computed:{themeRepository(){return this.repositoryFactory.create("theme")}},methods:{onDeleteTheme(e){this.modalTheme=e,this.showDeleteModal=!0},onCloseDeleteModal(){this.showDeleteModal=!1,this.modalTheme=null},onConfirmThemeDelete(){this.deleteTheme(this.modalTheme),this.showDeleteModal=!1,this.modalTheme=null},deleteTheme(e){const t=this.$tc("sw-theme-manager.components.themeListItem.notificationDeleteErrorTitle"),n=this.$tc("sw-theme-manager.components.themeListItem.notificationDeleteErrorMessage");this.isLoading=!0,this.themeRepository.delete(e.id,Shopware.Context.api).then(()=>{this.getList?this.getList():this.$router.push({name:"sw.theme.manager.index"})}).catch(()=>{this.isLoading=!1,this.createNotificationError({title:t,message:n})})},onDuplicateTheme(e){this.modalTheme=e,this.showDuplicateModal=!0},onCloseDuplicateModal(){this.showDuplicateModal=!1,this.modalTheme=null,this.newThemeName=""},onConfirmThemeDuplicate(){this.duplicateTheme(this.modalTheme,this.newThemeName),this.showDuplicateModal=!1,this.modalTheme=null,this.newThemeName=""},duplicateTheme(e,t){const n=this.themeRepository.create(Shopware.Context.api);n.name=t,n.parentThemeId=e.id,n.author=e.author,n.description=e.description,n.labels=e.labels,n.helpTexts=e.helpTexts,n.customFields=e.customFields,n.baseConfig=e.baseConfig,n.configValues=e.configValues,n.previewMediaId=e.previewMediaId,n.active=!0,this.themeRepository.save(n,Shopware.Context.api).then(()=>{this.$router.push({name:"sw.theme.manager.detail",params:{id:n.id}})})},onRenameTheme(e){this.modalTheme=e,this.newThemeName=this.modalTheme.name,this.showRenameModal=!0},onCloseRenameModal(){this.showRenameModal=!1,this.modalTheme=null,this.newThemeName=""},onConfirmThemeRename(){this.RenameTheme(this.modalTheme,this.newThemeName),this.showRenameModal=!1,this.modalTheme=null,this.newThemeName=""},RenameTheme(e,t){t&&(e.name=t),this.themeRepository.save(e,Shopware.Context.api)}}})},WWD4:function(e,t){e.exports="{%  block sw_sales_channel_detail_content_tab_theme %}\n    <sw-tabs-item v-if=\"!isProductComparison && !isLoading\"\n                  :route=\"{ name: 'sw.sales.channel.detail.theme', params: { id: $route.params.id } }\"\n                  :title=\"$tc('sw-sales-channel.detail.tabTheme')\">\n        {{ $tc('sw-sales-channel.detail.tabTheme') }}\n    </sw-tabs-item>\n{% endblock %}\n"},YmlE:function(e,t,n){},cq2Z:function(e,t,n){},"cu/B":function(e,t,n){var a=n("KzEh");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("d9fa88e2",a,!0,{})},eP6W:function(e,t,n){var a=n("cq2Z");"string"==typeof a&&(a=[[e.i,a,""]]),a.locals&&(e.exports=a.locals);(0,n("SZ7m").default)("4296b3b4",a,!0,{})},sTDI:function(e,t){e.exports='{% block sw_theme_list_item %}\n    <div class="sw-theme-list-item">\n\n        {% block sw_theme_list_item_options %}\n            <slot name="contextMenu"></slot>\n        {% endblock %}\n\n        {% block sw_theme_list_item_image %}\n            <div class="sw-theme-list-item__image"\n                 v-if="theme"\n                 :style="previewMedia"\n                 @click="$emit(\'item-click\', theme)">\n            </div>\n\n            <div class="sw-theme-list-item__image is--empty" v-else>\n                {{ $tc(\'sw-theme-manager.themeListItem.emptyText\') }}\n            </div>\n        {% endblock %}\n\n        {% block sw_theme_list_item_info %}\n            <div class="sw-theme-list-item__info">\n                <div v-if="theme" class="sw-theme-list-item__status" :class="componentClasses"></div>\n                <div class="sw-theme-list-item__title" v-if="theme" @click="onThemeClick">{{ theme.name }}</div>\n                <sw-icon v-if="theme && !theme.parentThemeId"\n                         class="sw-theme-list-item__locked"\n                         name="small-lock-closed"\n                         v-tooltip="lockToolTip"\n                         small>\n                </sw-icon>\n            </div>\n        {% endblock %}\n    </div>\n{% endblock %}\n'},x2yi:function(e,t){e.exports='{% block sw_theme_manager_detail %}\n    <sw-page class="sw-theme-manager-detail">\n\n        {% block sw_theme_manager_detail_search_bar %}\n            <template slot="search-bar">\n                <sw-search-bar :placeholder="$tc(\'sw-theme-manager.general.placeholderSearchBar\')"\n                               :searchType="$tc(\'sw-theme-manager.general.mainMenuItemIndex\')"\n                               :entityService="themeRepository"\n                               @search="onSearch">\n                </sw-search-bar>\n            </template>\n        {% endblock %}\n\n        {% block sw_theme_manager_detail_smart_bar_header %}\n            <template slot="smart-bar-header">\n\n                {% block sw_theme_manager_detail_smart_bar_header_title %}\n                    <h2 v-if="theme">\n                        {% block sw_theme_manager_detail_smart_bar_header_title_text %}\n                            {{ theme.name }}\n                        {% endblock %}\n                    </h2>\n\n                    <h2 v-else>\n                        {% block sw_theme_manager_detail_smart_bar_header_title_text_default %}\n                            {{ $tc(\'sw-theme-manager.list.textThemeOverview\') }}\n                        {% endblock %}\n                    </h2>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block sw_theme_manager_detail_smart_bar_actions %}\n            <template slot="smart-bar-actions">\n                {% block sw_theme_manager_detail_smart_bar_actions_save %}\n                    <sw-button-process\n                        :isLoading="isLoading"\n                        :processSuccess="isSaveSuccessful"\n                        :disabled="isLoading"\n                        variant="primary"\n                        @process-finish="saveFinish"\n                        @click="onSave">\n                        {{ $tc(\'sw-theme-manager.actions.save\') }}\n                    </sw-button-process>\n                {% endblock %}\n            </template>\n        {% endblock %}\n\n        {% block sw_theme_manager_detail_content %}\n            <template slot="content">\n                <sw-loader v-if="isLoading" size="30" class="sw-theme-manager-detail__loading-indicator"></sw-loader>\n\n                <div v-else class="sw-theme-manager-detail__content">\n\n                    <template v-if="theme && parentTheme">\n                        {% block sw_theme_manager_detail_content_inheritance %}\n                            <div class="sw-theme-manager-detail__inheritance">\n                                {% block sw_theme_manager_detail_content_inheritance_icon %}\n                                    <sw-icon :multicolor="true" size="20" name="custom-inherited"></sw-icon>\n                                {% endblock %}\n\n                                {% block sw_theme_manager_detail_content_inheritance_text %}\n                                    <p class="sw-theme-manager-detail__inheritance-text">\n                                        {{ $tc(\'sw-theme-manager.detail.inheritanceInfo\', 0, { parentThemeName: parentTheme.name }) }}\n                                    </p>\n                                {% endblock %}\n                            </div>\n                        {% endblock %}\n                    </template>\n\n                    {% block sw_theme_manager_detail_content_info %}\n                        <sw-card class="sw-theme-manager-detail__info-card">\n                            <div class="sw-theme-manager-detail__info">\n\n                                {% block sw_theme_manager_detail_content_info_image %}\n                                    <div class="sw-theme-manager-detail__info-image" :style="previewMedia"></div>\n                                {% endblock %}\n\n                                {% block sw_theme_manager_detail_content_info_content %}\n                                    <div class="sw-theme-manager-detail__info-content">\n                                        <div class="sw-theme-manager-detail__info-name">{{ theme.name }}</div>\n                                        <div class="sw-theme-manager-detail__info-author">{{ theme.author }}</div>\n                                        <div v-if="theme.description" class="sw-theme-manager-detail__info-descr">\n                                            <p class="sw-theme-manager-detail__info-descr-title">\n                                                {{ $tc(\'sw-theme-manager.detail.description\') }}:\n                                            </p>\n                                            <p>{{ theme.description |truncate(140) }}</p>\n                                        </div>\n\n                                        <div v-if="theme.salesChannels.length > 0"\n                                             class="sw-theme-manager-detail__info-saleschannels">\n                                            <p>{{ $tc(\'sw-theme-manager.detail.salesChannel\') }}:</p>\n\n                                            <span class="sw-theme-manager-detail__saleschannel"\n                                                v-for="salesChannel, index in theme.salesChannels">\n                                                <router-link :to="{ name: \'sw.sales.channel.detail.theme\', params: { id: salesChannel.id } }"\n                                                             class="sw-theme-manager-detail__saleschannel-link">\n                                                    <span>\n                                                        {{ salesChannel.name }}<template v-if="index < theme.salesChannels.length - 1">, </template>\n                                                    </span>\n                                                </router-link>\n                                            </span>\n                                        </div>\n                                    </div>\n                                {% endblock %}\n                            </div>\n\n                            {% block sw_theme_manager_detail_content_info_context_button %}\n                                <sw-context-button class="sw-theme-manager-detail__context-button">\n\n                                    {% block sw_theme_manager_detail_context_button_option_rename %}\n                                        <sw-context-menu-item @click="onRenameTheme(theme)">\n                                            {{ $tc(\'sw-theme-manager.actions.rename\') }}\n                                        </sw-context-menu-item>\n                                    {% endblock %}\n\n                                    {% block sw_theme_manager_detail_context_button_option_create %}\n                                        <sw-context-menu-item @click="onDuplicateTheme(theme)" v-if="!theme.parentThemeId">\n                                            {{ $tc(\'sw-theme-manager.actions.duplicate\') }}\n                                        </sw-context-menu-item>\n                                    {% endblock %}\n\n                                    {% block sw_theme_manager_detail_context_button_option_reset %}\n                                        <sw-context-menu-item\n                                            @click="onReset"\n                                            v-if="theme.configValues !== null"\n                                            variant="danger">\n                                            {{ $tc(\'sw-theme-manager.actions.buttonReset\') }}\n                                        </sw-context-menu-item>\n                                    {% endblock %}\n\n                                    {% block sw_theme_manager_detail_context_button_option_delete %}\n                                        <sw-context-menu-item\n                                            v-if="theme.parentThemeId"\n                                            :disabled="theme.salesChannels.length > 0"\n                                            v-tooltip="deleteDisabledToolTip"\n                                            class="sw-theme-manager-detail__option-delete"\n                                            variant="danger"\n                                            @click="onDeleteTheme(theme)">\n                                            {{ $tc(\'sw-theme-manager.actions.delete\') }}\n                                        </sw-context-menu-item>\n                                    {% endblock %}\n                                </sw-context-button>\n                            {% endblock %}\n                        </sw-card>\n                    {% endblock %}\n\n                    {% block sw_theme_manager_detail_content_areas %}\n                        <sw-card v-for="(area, areaIndex) in themeFields"\n                                 v-if="Object.values(area.sections).length > 0"\n                                 :key="areaIndex"\n                                 :title="$tc(area.label)"\n                                 class="sw-theme-manager-detail__area">\n\n                            {% block sw_theme_manager_detail_content_sections %}\n                                <sw-card-section v-for="(section, sectionIndex) in area.sections" :key="sectionIndex">\n                                    <div v-if="section.label" class="sw-theme-manager-detail__content--section_title">{{ $tc(section.label) }}</div>\n\n                                    {% block sw_theme_manager_detail_content_fields %}\n                                        <sw-container class="sw-theme-manager-detail__content--section_field">\n                                            <div v-for="(field, fieldIndex) in section"\n                                                 v-if="fieldIndex !== \'label\' && themeConfig[fieldIndex]"\n                                                 :key="fieldIndex"\n                                                 class="sw-theme-manager-detail__content--section_field">\n\n                                                <sw-field\n                                                    v-if="mapSwFieldTypes(field.type) === \'select\'"\n                                                    type="select"\n                                                    :placeholder="field.placeholder"\n                                                    :options="field.options"\n                                                    :label="!field.label ? \'\' : field.label"\n                                                    :helpText="!field.helpText ? null : field.helpText"\n                                                    v-model="themeConfig[fieldIndex].value">\n                                                </sw-field>\n                                                <sw-field\n                                                    v-else-if="field.type === \'url\'"\n                                                    type="url"\n                                                    :label="!field.label ? \'\' : field.label"\n                                                    :helpText="!field.helpText ? null : field.helpText"\n                                                    v-model="themeConfig[fieldIndex].value">\n                                                </sw-field>\n                                                <div v-else-if="field.type === \'media\'">\n\n                                                    <sw-upload-store-listener\n                                                        :uploadTag="areaIndex + \'-\' + sectionIndex + \'-\' + fieldIndex"\n                                                        @media-upload-finish="successfulUpload($event, themeConfig[fieldIndex])"\n                                                        autoUpload>\n                                                    </sw-upload-store-listener>\n\n                                                    <sw-media-upload\n                                                        :label="!field.label ? \'\' : field.label"\n                                                        :source="themeConfig[fieldIndex].value"\n                                                        :uploadTag="areaIndex + \'-\' + sectionIndex + \'-\' + fieldIndex"\n                                                        :helpText="!field.helpText ? null : field.helpText"\n                                                        :ref="areaIndex + \'-\' + sectionIndex + \'-\' + fieldIndex"\n                                                        :defaultFolder="themeRepository.schema.entity"\n                                                        :allowMultiSelect="false"\n                                                        @media-drop="onDropMedia($event, themeConfig[fieldIndex])"\n                                                        @media-upload-sidebar-open="openMediaSidebar()"\n                                                        @media-upload-remove-image="removeMediaItem(themeConfig[fieldIndex])">\n                                                    </sw-media-upload>\n                                                </div>\n                                                <sw-field\n                                                    v-else-if="mapSwFieldTypes(field.type)"\n                                                    :type="mapSwFieldTypes(field.type)"\n                                                    :label="!field.label ? \'\' : field.label"\n                                                    :helpText="!field.helpText ? null : field.helpText"\n                                                    v-model="themeConfig[fieldIndex].value">\n                                                </sw-field>\n                                                <sw-form-field-renderer\n                                                        v-else\n                                                        v-bind="getBind(field)"\n                                                        v-model="themeConfig[fieldIndex].value">\n                                                </sw-form-field-renderer>\n                                            </div>\n                                        </sw-container>\n                                    {% endblock %}\n                                </sw-card-section>\n                            {% endblock %}\n                        </sw-card>\n                    {% endblock %}\n                </div>\n            {% endblock %}\n\n            {% block sw_theme_manager_reset_modal %}\n                <sw-modal v-if="showResetModal"\n                          @modal-close="onCloseResetModal"\n                          :title="$tc(\'sw-theme-manager.modal.modalTitleReset\')"\n                          variant="small">\n\n                    {% block sw_theme_manager_reset_modal_reset_text %}\n                        <p class="sw_theme_manager__confirm-reset-text">\n                            {{ $tc(\'sw-theme-manager.modal.modalTextResetInfo\') }}\n                        </p>\n                        <p v-if="theme.salesChannels.length > 0" class="sw_theme_manager__confirm-reset-text">\n                            {{ $tc(\'sw-theme-manager.modal.modalTextResetAssigned\') }}\n                        </p>\n                    {% endblock %}\n\n                    {% block sw_theme_manager_reset_modal_footer %}\n                        <template slot="modal-footer">\n                            {% block sw_theme_manager_reset_modal_cancel %}\n                                <sw-button @click="onCloseResetModal"\n                                           size="small">\n                                    {{ $tc(\'sw-theme-manager.actions.buttonCancel\') }}\n                                </sw-button>\n                            {% endblock %}\n\n                            {% block sw_theme_manager_reset_modal_confirm %}\n                                <sw-button @click="onConfirmThemeReset"\n                                           variant="danger"\n                                           size="small">\n                                    {{ $tc(\'sw-theme-manager.actions.buttonReset\') }}\n                                </sw-button>\n                            {% endblock %}\n                     </template>\n                    {% endblock %}\n                </sw-modal>\n            {% endblock %}\n\n            {% block sw_theme_manager_detail_delete_modal %}\n                <sw-modal v-if="showDeleteModal"\n                          @modal-close="onCloseDeleteModal"\n                          :title="$tc(\'sw-theme-manager.modal.modalTitleDelete\')"\n                          variant="small">\n\n                    {% block sw_theme_manager_detail_delete_modal_info %}\n                        <div class="sw_theme_manager__confirm-delete-text">\n                            {{ $tc(\'sw-theme-manager.modal.textDeleteInfo\', 0,\n                            { themeName: theme.name }) }}\n                        </div>\n                    {% endblock %}\n\n                    {% block sw_theme_manager_detail_delete_modal_footer %}\n                        <template slot="modal-footer">\n                            {% block sw_theme_manager_detail_delete_modal_cancel %}\n                                <sw-button @click="onCloseDeleteModal"\n                                           size="small">\n                                    {{ $tc(\'sw-theme-manager.modal.buttonCancel\') }}\n                                </sw-button>\n                            {% endblock %}\n\n                            {% block sw_theme_manager_detail_delete_modal_confirm %}\n                                <sw-button @click="onConfirmThemeDelete"\n                                           variant="danger"\n                                           size="small">\n                                    {{ $tc(\'sw-theme-manager.modal.buttonDelete\') }}\n                                </sw-button>\n                            {% endblock %}\n                        </template>\n                    {% endblock %}\n                </sw-modal>\n            {% endblock %}\n\n            {% block sw_theme_manager_detail_save_modal %}\n                <sw-modal v-if="showSaveModal"\n                          @modal-close="onCloseSaveModal"\n                          :title="$tc(\'sw-theme-manager.modal.modalTitleSave\')"\n                          variant="small">\n\n                    {% block sw_theme_manager_detail_save_modal_info %}\n                        <div class="sw_theme_manager__confirm-save-text">\n                            {{ $tc(\'sw-theme-manager.modal.textSaveInfo\', 0,\n                            { themeName: theme.name }) }}\n                        </div>\n                    {% endblock %}\n\n                    {% block sw_theme_manager_detail_save_modal_footer %}\n                        <template slot="modal-footer">\n                            {% block sw_theme_manager_detail_save_modal_cancel %}\n                                <sw-button @click="onCloseSaveModal"\n                                           size="small">\n                                    {{ $tc(\'sw-theme-manager.modal.buttonCancel\') }}\n                                </sw-button>\n                            {% endblock %}\n\n                            {% block sw_theme_manager_detail_save_modal_confirm %}\n                                <sw-button @click="onConfirmThemeSave"\n                                           variant="primary"\n                                           size="small">\n                                    {{ $tc(\'sw-theme-manager.modal.buttonSave\') }}\n                                </sw-button>\n                            {% endblock %}\n                        </template>\n                    {% endblock %}\n                </sw-modal>\n            {% endblock %}\n\n            {% block sw_theme_manager_detail_duplicate_modal %}\n                <sw-modal v-if="showDuplicateModal"\n                          class="sw_theme_manager__duplicate-modal"\n                          @modal-close="onCloseDuplicateModal"\n                          :title="$tc(\'sw-theme-manager.modal.modalTitleDuplicate\')"\n                          variant="small">\n\n                    {% block sw_theme_manager_detail_duplicate_modal_name_input %}\n                        <div class="sw_theme_manager__duplicate-info">\n                            {{ $tc(\'sw-theme-manager.modal.textDuplicateInfo\') }}\n                        </div>\n\n                        <sw-field v-model="newThemeName"\n                                  :label="$tc(\'sw-theme-manager.modal.labelDuplicateThemeName\')"\n                                  :placeholder="$tc(\'sw-theme-manager.modal.placeholderDuplicateThemeName\')"\n                                  tpye="text">\n                        </sw-field>\n                    {% endblock %}\n\n                    {% block sw_theme_manager_detail_duplicate_modal_footer %}\n                        <template slot="modal-footer">\n                            {% block sw_theme_manager_detail_duplicate_modal_cancel %}\n                                <sw-button @click="onCloseDuplicateModal"\n                                           size="small">\n                                    {{ $tc(\'sw-theme-manager.modal.buttonCancel\') }}\n                                </sw-button>\n                            {% endblock %}\n\n                            {% block sw_theme_manager_detail_duplicate_modal_confirm %}\n                                <sw-button @click="onConfirmThemeDuplicate"\n                                           variant="primary"\n                                           :disabled="newThemeName.length < 3"\n                                           size="small">\n                                    {{ $tc(\'sw-theme-manager.modal.buttonDuplicateTheme\') }}\n                                </sw-button>\n                            {% endblock %}\n                        </template>\n                    {% endblock %}\n                </sw-modal>\n            {% endblock %}\n\n            {% block sw_theme_manager_detail_rename_modal %}\n                <sw-modal v-if="showRenameModal"\n                          class="sw_theme_manager__rename-modal"\n                          @modal-close="onCloseRenameModal"\n                          :title="$tc(\'sw-theme-manager.modal.modalTitleRename\')"\n                          variant="small">\n\n                    {% block sw_theme_manager_detail_rename_modal_name_input %}\n                        <div class="sw_theme_manager__rename-info">\n                            {{ $tc(\'sw-theme-manager.modal.textRenameInfo\') }}\n                        </div>\n\n                        <sw-field v-model="newThemeName"\n                                  :label="$tc(\'sw-theme-manager.modal.labelRenameThemeName\')"\n                                  :placeholder="$tc(\'sw-theme-manager.modal.placeholderRenameThemeName\')"\n                                  tpye="text">\n                        </sw-field>\n                    {% endblock %}\n\n                    {% block sw_theme_manager_detail_rename_modal_footer %}\n                        <template slot="modal-footer">\n                            {% block sw_theme_manager_detail_rename_modal_cancel %}\n                                <sw-button @click="onCloseRenameModal"\n                                           size="small">\n                                    {{ $tc(\'sw-theme-manager.modal.buttonCancel\') }}\n                                </sw-button>\n                            {% endblock %}\n\n                            {% block sw_theme_manager_detail_rename_modal_confirm %}\n                                <sw-button @click="onConfirmThemeRename"\n                                           variant="primary"\n                                           :disabled="newThemeName.length < 3"\n                                           size="small">\n                                    {{ $tc(\'sw-theme-manager.modal.buttonRenameTheme\') }}\n                                </sw-button>\n                            {% endblock %}\n                        </template>\n                    {% endblock %}\n                </sw-modal>\n            {% endblock %}\n        </template>\n\n        {% block sw_theme_manager_detail_sidebar %}\n            <sw-sidebar slot="sidebar" :propagateWidth="true">\n                {% block sw_theme_manager_detail_sidebar_media %}\n                    <sw-sidebar-media-item\n                        ref="mediaSidebarItem"\n                        :initialFolderId="defaultMediaFolderId">\n                    </sw-sidebar-media-item>\n                {% endblock %}\n            </sw-sidebar>\n        {% endblock %}\n    </sw-page>\n{% endblock %}\n'}},[["L9KI","runtime","vendors-node"]]]);